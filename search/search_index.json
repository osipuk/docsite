{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"","title":"Home"},{"location":"Account/index.html","text":"Create Account This object is used to access the Account lookup table. Create an Account if Account does not already exist. URL : /api/account Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Require Type Description strCode Yes String A unique code for referencing the account. strDescription Yes String A short text describing the account. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 56 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strCode is required } { msg : Create failed } Get all Account list Get the all registered Account list. URL : /api/account Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Account list found! , data : [ { _id : 45 , strCode : A45 , strDescription : String __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Update Account Update the Account by Id URL : /api/account/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Param Require Type Description strCode Yes String A unique code for referencing the account. strDescription Yes String A short text describing the account. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Get Single Account By Id Get a single Account by id if current Account was registered on it. URL : /api/account/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Success Response: Code : 200 success Resonse example { msg : Found! , data : { _id : 54 , strCode : 34 , strDescription : String intUpdated :2020-11-26T10:42:25.136+00:00 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If workorder does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null } Delete Account Delete a Account by Id URL : /api/account/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Account"},{"location":"Account/index.html#create-account","text":"This object is used to access the Account lookup table. Create an Account if Account does not already exist. URL : /api/account Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Require Type Description strCode Yes String A unique code for referencing the account. strDescription Yes String A short text describing the account. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 56 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strCode is required } { msg : Create failed }","title":"Create Account"},{"location":"Account/index.html#get-all-account-list","text":"Get the all registered Account list. URL : /api/account Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Account list found! , data : [ { _id : 45 , strCode : A45 , strDescription : String __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Get all Account list"},{"location":"Account/index.html#update-account","text":"Update the Account by Id URL : /api/account/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Param Require Type Description strCode Yes String A unique code for referencing the account. strDescription Yes String A short text describing the account. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update Account"},{"location":"Account/index.html#get-single-account-by-id","text":"Get a single Account by id if current Account was registered on it. URL : /api/account/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Success Response: Code : 200 success Resonse example { msg : Found! , data : { _id : 54 , strCode : 34 , strDescription : String intUpdated :2020-11-26T10:42:25.136+00:00 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If workorder does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Get Single Account By Id"},{"location":"Account/index.html#delete-account","text":"Delete a Account by Id URL : /api/account/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the account. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete Account"},{"location":"Asset/index.html","text":"Create Asset This object is used to represent the assets that are to be managed by the CMMS : these can be equipments, locations and facilities, or tools Create an Asset if Asset does not already exist. URL : /api/assets Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strName String Display name of the asset. strDescription String A short text describing the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strModel String For equipment or tools, this field can be used to store the model's name of the asset. qtyMinStockCount integer Mininum stock count for the asset. strCity String The city the asset is located into. strShippingTerms String This field can be used to add comments about the shipping terms of the asset. For example : \"Item is heavier than 20kg and must be delivered before 10AM.\" strAddress String Street number and street name of the address the asset is located at. strNotes String This field can be used to store additional details about the asset like the name of its supplier, a voltage range or dimensions for example. strProvince String Code or full name of the province the asset is located at. intCountryID integer The ID of the country the asset is located at. For example : 124 for Canada or 840 for United States of America. For getting all possible values, please refer to the Country section. strInventoryCode String This field can be used to store an inventory code for the asset. qtyStockCount Integer Indicates the current stock count for the asset. intSiteID Integer For multi-sites tenants, the ID of the site where the asset is located at. strRow String The row where the asset is located at in a facility. strMASourceProduct string A JSON formatted string giving details about an asset coming from MA Source. strAisle string The aisle where the asset is located at in a facility. strBinNumber string The number of the bin where the asset is stored. intCategoryID Integer The ID of the category the asset is directly attached to. strPostalCode string The postal code of the address the asset is located at. strSerialNumber string This field can be used to store the serial number of the asset. strCode string This field can be used to define a code associated with the asset. dblLatitude Double The latitude of the geographic location of the asset. dblLongitude Double The longitude of the geographic location of the asset. strUnspcCode String This field can be used to store the United Nations Standard Products and Services Code of the asset. dblLastPrice Double Last Purchase Price Per Unit on Asset bolIsBillToFacility Boolean If set to true, indicates that invoices for assets (usually parts/supplies) should be sent to this facility. intAssetLocationID Integer An integer uniquely defining the location of asset. Refers to Asset with an asset category as Locations And Facilities bolIsOnline Boolean A boolean value representing if the related Asset is online or offline, 1 or 0 respectively. bolIsShippingOrReceivingFacility Boolean A boolean that identifies whether a facility ships or receives assets (usually parts/supplies). strQuotingTerms Boolean Quoting terms that are automatically added to RFQs where shipping is indicated for Asset type Facility. intAssetParentID Integer An integer that uniquely identifies the parent of Asset. intAccountID Integer An integer unitquely defining the Account. intChargeDepartmentID Integer An integer uniquely defining the Charge Department intSuperCategorySysCode Integer Asset Category SysCode for Region or a Site strBarcode Integer For equipment or tools, this field can be used to store the bar code's value of the asset. Data example { strFullName : strFullName of Asset , strDescription : Asset_Desc_Name , strMake : Asset_Make_Name , strModel : Asset_Model_Name , qtyStockCount : 4 ... ... } Success Response: Code : 200 success Resonse example { msg : Asset added successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strFullName is required } { msg : update failed } Get all asset list Get the all registered asset list. URL : /api/assets Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Asset list found! , data : [ { _id : 5f6896897b9884253cf6bdb6 , strName : strName , strDescription : strDescription , strMake : strMake , strModel : strModel , qtyMinStockCount : 23, strCity : strCity , strShippingTerms : strShippingTerms , strAddress : strAddress , strNotes : , strProvince : , intCountryID : 45, strInventoryCode : , qtyStockCount : 11, intSiteID : 329, strRow : , strMASourceProduct : , strAisle : , strBinNumber : , intCategoryID : 32, strPostalCode : , strSerialNumber : , strCode : , dblLatitude : 0.114573, dblLongitude : 4.2587, strUnspcCode : , dblLastPrice : 4.5, bolIsBillToFacility : false, intAssetLocationID : 886, bolIsOnline : false, bolIsShippingOrReceivingFacility : false, strQuotingTerms : , intAssetParentID : null, intAccountID : null, intChargeDepartmentID : null, intSuperCategorySysCode : null, strBarcode : , __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Update Asset Update the Asset by Id URL : /api/assets/:uid Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Param Type Description strName String Display name of the asset. strDescription String A short text describing the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strModel String For equipment or tools, this field can be used to store the model's name of the asset. qtyMinStockCount integer Mininum stock count for the asset. strCity String The city the asset is located into. strShippingTerms String This field can be used to add comments about the shipping terms of the asset. For example : \"Item is heavier than 20kg and must be delivered before 10AM.\" strAddress String Street number and street name of the address the asset is located at. strNotes String This field can be used to store additional details about the asset like the name of its supplier, a voltage range or dimensions for example. strProvince String Code or full name of the province the asset is located at. intCountryID integer The ID of the country the asset is located at. For example : 124 for Canada or 840 for United States of America. For getting all possible values, please refer to the Country section. strInventoryCode String This field can be used to store an inventory code for the asset. qtyStockCount Integer Indicates the current stock count for the asset. intSiteID Integer For multi-sites tenants, the ID of the site where the asset is located at. strRow String The row where the asset is located at in a facility. strMASourceProduct string A JSON formatted string giving details about an asset coming from MA Source. strAisle string The aisle where the asset is located at in a facility. strBinNumber string The number of the bin where the asset is stored. intCategoryID Integer The ID of the category the asset is directly attached to. strPostalCode string The postal code of the address the asset is located at. strSerialNumber string This field can be used to store the serial number of the asset. strCode string This field can be used to define a code associated with the asset. dblLatitude Double The latitude of the geographic location of the asset. dblLongitude Double The longitude of the geographic location of the asset. strUnspcCode String This field can be used to store the United Nations Standard Products and Services Code of the asset. dblLastPrice Double Last Purchase Price Per Unit on Asset bolIsBillToFacility Boolean If set to true, indicates that invoices for assets (usually parts/supplies) should be sent to this facility. intAssetLocationID Integer An integer uniquely defining the location of asset. Refers to Asset with an asset category as Locations And Facilities bolIsOnline Boolean A boolean value representing if the related Asset is online or offline, 1 or 0 respectively. bolIsShippingOrReceivingFacility Boolean A boolean that identifies whether a facility ships or receives assets (usually parts/supplies). strQuotingTerms Boolean Quoting terms that are automatically added to RFQs where shipping is indicated for Asset type Facility. intAssetParentID Integer An integer that uniquely identifies the parent of Asset. intAccountID Integer An integer unitquely defining the Account. intChargeDepartmentID Integer An integer uniquely defining the Charge Department intSuperCategorySysCode Integer Asset Category SysCode for Region or a Site strBarcode Integer For equipment or tools, this field can be used to store the bar code's value of the asset. *Data example { strFullName : strFullName of Asset , strDescription : Asset_Desc_Name , strMake : Asset_Make_Name , strModel : Asset_Model_Name , qtyStockCount : 4 ... ... } Success Response Code : 200 success Resonse example { msg : Asset updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : update failed } Get Single Asset By Id Get a single Asset by id if current asset was registered on it. URL : /api/assets/:assetid Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response: Code : 200 success Resonse example { msg : Asset found! , data : { _id : 5f6896897b9884253cf6bdb6 , strName : strName , strDescription : strDescription , strMake : strMake , strModel : strModel , qtyMinStockCount : 23, strCity : strCity , strShippingTerms : strShippingTerms , strAddress : strAddress , strNotes : , strProvince : , intCountryID : 45, strInventoryCode : , qtyStockCount : 11, intSiteID : 329, strRow : , strMASourceProduct : , strAisle : , strBinNumber : , intCategoryID : 32, strPostalCode : , strSerialNumber : , strCode : , dblLatitude : 0.114573, dblLongitude : 4.2587, strUnspcCode : , dblLastPrice : 4.5, bolIsBillToFacility : false, intAssetLocationID : 886, bolIsOnline : false, bolIsShippingOrReceivingFacility : false, strQuotingTerms : , intAssetParentID : null, intAccountID : null, intChargeDepartmentID : null, intSuperCategorySysCode : null, strBarcode : , __v : 0 } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If asset does not exist on server. Code : 404 Not Found Content example { msg : Asset not found , data :null } Delete Asset Delete the Asset by Id URL : /api/assets/:assetid Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response Code : 200 success Resonse example { msg : Asset deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Asset"},{"location":"Asset/index.html#create-asset","text":"This object is used to represent the assets that are to be managed by the CMMS : these can be equipments, locations and facilities, or tools Create an Asset if Asset does not already exist. URL : /api/assets Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strName String Display name of the asset. strDescription String A short text describing the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strModel String For equipment or tools, this field can be used to store the model's name of the asset. qtyMinStockCount integer Mininum stock count for the asset. strCity String The city the asset is located into. strShippingTerms String This field can be used to add comments about the shipping terms of the asset. For example : \"Item is heavier than 20kg and must be delivered before 10AM.\" strAddress String Street number and street name of the address the asset is located at. strNotes String This field can be used to store additional details about the asset like the name of its supplier, a voltage range or dimensions for example. strProvince String Code or full name of the province the asset is located at. intCountryID integer The ID of the country the asset is located at. For example : 124 for Canada or 840 for United States of America. For getting all possible values, please refer to the Country section. strInventoryCode String This field can be used to store an inventory code for the asset. qtyStockCount Integer Indicates the current stock count for the asset. intSiteID Integer For multi-sites tenants, the ID of the site where the asset is located at. strRow String The row where the asset is located at in a facility. strMASourceProduct string A JSON formatted string giving details about an asset coming from MA Source. strAisle string The aisle where the asset is located at in a facility. strBinNumber string The number of the bin where the asset is stored. intCategoryID Integer The ID of the category the asset is directly attached to. strPostalCode string The postal code of the address the asset is located at. strSerialNumber string This field can be used to store the serial number of the asset. strCode string This field can be used to define a code associated with the asset. dblLatitude Double The latitude of the geographic location of the asset. dblLongitude Double The longitude of the geographic location of the asset. strUnspcCode String This field can be used to store the United Nations Standard Products and Services Code of the asset. dblLastPrice Double Last Purchase Price Per Unit on Asset bolIsBillToFacility Boolean If set to true, indicates that invoices for assets (usually parts/supplies) should be sent to this facility. intAssetLocationID Integer An integer uniquely defining the location of asset. Refers to Asset with an asset category as Locations And Facilities bolIsOnline Boolean A boolean value representing if the related Asset is online or offline, 1 or 0 respectively. bolIsShippingOrReceivingFacility Boolean A boolean that identifies whether a facility ships or receives assets (usually parts/supplies). strQuotingTerms Boolean Quoting terms that are automatically added to RFQs where shipping is indicated for Asset type Facility. intAssetParentID Integer An integer that uniquely identifies the parent of Asset. intAccountID Integer An integer unitquely defining the Account. intChargeDepartmentID Integer An integer uniquely defining the Charge Department intSuperCategorySysCode Integer Asset Category SysCode for Region or a Site strBarcode Integer For equipment or tools, this field can be used to store the bar code's value of the asset. Data example { strFullName : strFullName of Asset , strDescription : Asset_Desc_Name , strMake : Asset_Make_Name , strModel : Asset_Model_Name , qtyStockCount : 4 ... ... } Success Response: Code : 200 success Resonse example { msg : Asset added successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strFullName is required } { msg : update failed }","title":"Create Asset"},{"location":"Asset/index.html#get-all-asset-list","text":"Get the all registered asset list. URL : /api/assets Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Asset list found! , data : [ { _id : 5f6896897b9884253cf6bdb6 , strName : strName , strDescription : strDescription , strMake : strMake , strModel : strModel , qtyMinStockCount : 23, strCity : strCity , strShippingTerms : strShippingTerms , strAddress : strAddress , strNotes : , strProvince : , intCountryID : 45, strInventoryCode : , qtyStockCount : 11, intSiteID : 329, strRow : , strMASourceProduct : , strAisle : , strBinNumber : , intCategoryID : 32, strPostalCode : , strSerialNumber : , strCode : , dblLatitude : 0.114573, dblLongitude : 4.2587, strUnspcCode : , dblLastPrice : 4.5, bolIsBillToFacility : false, intAssetLocationID : 886, bolIsOnline : false, bolIsShippingOrReceivingFacility : false, strQuotingTerms : , intAssetParentID : null, intAccountID : null, intChargeDepartmentID : null, intSuperCategorySysCode : null, strBarcode : , __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Get all asset list"},{"location":"Asset/index.html#update-asset","text":"Update the Asset by Id URL : /api/assets/:uid Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Param Type Description strName String Display name of the asset. strDescription String A short text describing the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strMake String For equipment or tools, this field can be used to store the brand's name of the asset. strModel String For equipment or tools, this field can be used to store the model's name of the asset. qtyMinStockCount integer Mininum stock count for the asset. strCity String The city the asset is located into. strShippingTerms String This field can be used to add comments about the shipping terms of the asset. For example : \"Item is heavier than 20kg and must be delivered before 10AM.\" strAddress String Street number and street name of the address the asset is located at. strNotes String This field can be used to store additional details about the asset like the name of its supplier, a voltage range or dimensions for example. strProvince String Code or full name of the province the asset is located at. intCountryID integer The ID of the country the asset is located at. For example : 124 for Canada or 840 for United States of America. For getting all possible values, please refer to the Country section. strInventoryCode String This field can be used to store an inventory code for the asset. qtyStockCount Integer Indicates the current stock count for the asset. intSiteID Integer For multi-sites tenants, the ID of the site where the asset is located at. strRow String The row where the asset is located at in a facility. strMASourceProduct string A JSON formatted string giving details about an asset coming from MA Source. strAisle string The aisle where the asset is located at in a facility. strBinNumber string The number of the bin where the asset is stored. intCategoryID Integer The ID of the category the asset is directly attached to. strPostalCode string The postal code of the address the asset is located at. strSerialNumber string This field can be used to store the serial number of the asset. strCode string This field can be used to define a code associated with the asset. dblLatitude Double The latitude of the geographic location of the asset. dblLongitude Double The longitude of the geographic location of the asset. strUnspcCode String This field can be used to store the United Nations Standard Products and Services Code of the asset. dblLastPrice Double Last Purchase Price Per Unit on Asset bolIsBillToFacility Boolean If set to true, indicates that invoices for assets (usually parts/supplies) should be sent to this facility. intAssetLocationID Integer An integer uniquely defining the location of asset. Refers to Asset with an asset category as Locations And Facilities bolIsOnline Boolean A boolean value representing if the related Asset is online or offline, 1 or 0 respectively. bolIsShippingOrReceivingFacility Boolean A boolean that identifies whether a facility ships or receives assets (usually parts/supplies). strQuotingTerms Boolean Quoting terms that are automatically added to RFQs where shipping is indicated for Asset type Facility. intAssetParentID Integer An integer that uniquely identifies the parent of Asset. intAccountID Integer An integer unitquely defining the Account. intChargeDepartmentID Integer An integer uniquely defining the Charge Department intSuperCategorySysCode Integer Asset Category SysCode for Region or a Site strBarcode Integer For equipment or tools, this field can be used to store the bar code's value of the asset. *Data example { strFullName : strFullName of Asset , strDescription : Asset_Desc_Name , strMake : Asset_Make_Name , strModel : Asset_Model_Name , qtyStockCount : 4 ... ... } Success Response Code : 200 success Resonse example { msg : Asset updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : update failed }","title":"Update Asset"},{"location":"Asset/index.html#get-single-asset-by-id","text":"Get a single Asset by id if current asset was registered on it. URL : /api/assets/:assetid Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response: Code : 200 success Resonse example { msg : Asset found! , data : { _id : 5f6896897b9884253cf6bdb6 , strName : strName , strDescription : strDescription , strMake : strMake , strModel : strModel , qtyMinStockCount : 23, strCity : strCity , strShippingTerms : strShippingTerms , strAddress : strAddress , strNotes : , strProvince : , intCountryID : 45, strInventoryCode : , qtyStockCount : 11, intSiteID : 329, strRow : , strMASourceProduct : , strAisle : , strBinNumber : , intCategoryID : 32, strPostalCode : , strSerialNumber : , strCode : , dblLatitude : 0.114573, dblLongitude : 4.2587, strUnspcCode : , dblLastPrice : 4.5, bolIsBillToFacility : false, intAssetLocationID : 886, bolIsOnline : false, bolIsShippingOrReceivingFacility : false, strQuotingTerms : , intAssetParentID : null, intAccountID : null, intChargeDepartmentID : null, intSuperCategorySysCode : null, strBarcode : , __v : 0 } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If asset does not exist on server. Code : 404 Not Found Content example { msg : Asset not found , data :null }","title":"Get Single Asset By Id"},{"location":"Asset/index.html#delete-asset","text":"Delete the Asset by Id URL : /api/assets/:assetid Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response Code : 200 success Resonse example { msg : Asset deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete  Asset"},{"location":"AssetBusiness/index.html","text":"Create AssetBusiness An AssetBusiness represents the relationship between a particular Business within your CMMS and the associated Assets with this Business. It contains information about the Business Role Type, such as Customer/Client, Manufacturer, Owner, Service Provider, or Supplier Create an AssetBusiness if AssetBusiness does not already exist. URL : /api/assetbusiness Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description intBusinessID Integer An integer that uniquely identifies the Business (used in conjunction with AssetID). intBusinessRoleTypeID Integer An integer that uniquely identifies the Business Role Type (used in conjunction with BusinessRoleType). intAssetID Integer An integer that uniquely identifies the Asset that is associated with the Business (used in conjunction with BusinessID). bolSendRFQs Boolean If set to true, indicates that RFQs should be sent when stock is low for for an asset (usually parts/supplies). bolPreferredVendor Boolean If set to true, indicates that the vendor is the Preferred Vendor for the associated asset (usually parts/supplies). qtyEconomicBatchQuantity Integer The minimum quantity when re-ordering an asset (usually parts/supplies). strBusinessAssetNumber String A string that represents an asset's part number from the business (usually parts/supplies). intBusinessGroupID Integer Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed } Read Get AssetBusiness list Get the all registered AssetBusiness list by Business Id . URL : /api/assetbusiness/:businessId Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetBussiness. Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { bolPreferredVendor: false bolSendRFQs: false intAssetID: {_id: 137, strName: New Facility # 137 , intCategoryKind: 1, \u2026} intBusinessID: 9 intBusinessRoleTypeID: 5 strBusinessAssetNumber: ss strCategory: xx _id: 5 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Update AssetBusiness Update the AssetBusiness by Id URL : /api/assetbusiness/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetbusiness. Param Type Description intBusinessID Integer An integer that uniquely identifies the Business (used in conjunction with AssetID). intBusinessRoleTypeID Integer An integer that uniquely identifies the Business Role Type (used in conjunction with BusinessRoleType). intAssetID Integer An integer that uniquely identifies the Asset that is associated with the Business (used in conjunction with BusinessID). bolSendRFQs Boolean If set to true, indicates that RFQs should be sent when stock is low for for an asset (usually parts/supplies). bolPreferredVendor Boolean If set to true, indicates that the vendor is the Preferred Vendor for the associated asset (usually parts/supplies). qtyEconomicBatchQuantity Integer The minimum quantity when re-ordering an asset (usually parts/supplies). strBusinessAssetNumber String A string that represents an asset's part number from the business (usually parts/supplies). intBusinessGroupID Integer Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Delete AssetBusiness Delete an AssetBusiness by Id URL : /api/assetbusiness/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetBussiness. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"AssetBusiness"},{"location":"AssetBusiness/index.html#create-assetbusiness","text":"An AssetBusiness represents the relationship between a particular Business within your CMMS and the associated Assets with this Business. It contains information about the Business Role Type, such as Customer/Client, Manufacturer, Owner, Service Provider, or Supplier Create an AssetBusiness if AssetBusiness does not already exist. URL : /api/assetbusiness Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description intBusinessID Integer An integer that uniquely identifies the Business (used in conjunction with AssetID). intBusinessRoleTypeID Integer An integer that uniquely identifies the Business Role Type (used in conjunction with BusinessRoleType). intAssetID Integer An integer that uniquely identifies the Asset that is associated with the Business (used in conjunction with BusinessID). bolSendRFQs Boolean If set to true, indicates that RFQs should be sent when stock is low for for an asset (usually parts/supplies). bolPreferredVendor Boolean If set to true, indicates that the vendor is the Preferred Vendor for the associated asset (usually parts/supplies). qtyEconomicBatchQuantity Integer The minimum quantity when re-ordering an asset (usually parts/supplies). strBusinessAssetNumber String A string that represents an asset's part number from the business (usually parts/supplies). intBusinessGroupID Integer Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed }","title":"Create AssetBusiness"},{"location":"AssetBusiness/index.html#read-get-assetbusiness-list","text":"Get the all registered AssetBusiness list by Business Id . URL : /api/assetbusiness/:businessId Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetBussiness. Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { bolPreferredVendor: false bolSendRFQs: false intAssetID: {_id: 137, strName: New Facility # 137 , intCategoryKind: 1, \u2026} intBusinessID: 9 intBusinessRoleTypeID: 5 strBusinessAssetNumber: ss strCategory: xx _id: 5 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Read Get AssetBusiness list"},{"location":"AssetBusiness/index.html#update-assetbusiness","text":"Update the AssetBusiness by Id URL : /api/assetbusiness/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetbusiness. Param Type Description intBusinessID Integer An integer that uniquely identifies the Business (used in conjunction with AssetID). intBusinessRoleTypeID Integer An integer that uniquely identifies the Business Role Type (used in conjunction with BusinessRoleType). intAssetID Integer An integer that uniquely identifies the Asset that is associated with the Business (used in conjunction with BusinessID). bolSendRFQs Boolean If set to true, indicates that RFQs should be sent when stock is low for for an asset (usually parts/supplies). bolPreferredVendor Boolean If set to true, indicates that the vendor is the Preferred Vendor for the associated asset (usually parts/supplies). qtyEconomicBatchQuantity Integer The minimum quantity when re-ordering an asset (usually parts/supplies). strBusinessAssetNumber String A string that represents an asset's part number from the business (usually parts/supplies). intBusinessGroupID Integer Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update AssetBusiness"},{"location":"AssetBusiness/index.html#delete-assetbusiness","text":"Delete an AssetBusiness by Id URL : /api/assetbusiness/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetBussiness. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete AssetBusiness"},{"location":"AssetCategory/index.html","text":"Create AssetCategory This object is used for representing a category of assets. Main categories are equipment, tools and facilities but more categories can be created under those root categories. Create an AssetCategory if AssetCategory does not already exist. URL : /api/assetcategory Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description intParentID Integer The ID of the parent category this category is directly attached to. strName String A display name for the category. intSysCode Integer System codes are used to define root categories with a significant meaning for the CMMS. There should be only one category with each system code for a given tenant. Possible values are : 0 for Assets, 1 for Locations And Facilities, 2 for Equipment, 3 for Tools, 4 for Parts And Supplies, 5 for Inventory Storage, 6 for Buildings, 7 for Plants, 10 for Regions and 11 for Rotating Spares. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strName is required } { msg : Create failed } Get all AssetCategory list Get the all registered AssetCategory list. URL : /api/assetcategory Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { _id : 5f6a6f90d9741d152c754178 , intParentID : 11, strName : String , intSysCode : 3, bolOverrideRules :true __v : 0 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Get Single AssetCategory By Id Get a single AssetCategory by id if current AssetCategory was registered on it. URL : /api/assetcategory/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetcategory. Success Response Code : 200 success Resonse example { msg : Found! , data : { _id : 5f6896897b9884253cf6bdb6 , intParentID : Integer , strName : String , intSysCode :3, bolOverrideRules :true } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If AssetCategory does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null } Update AssetCategory Update the AssetCategory by Id URL : /api/assetcategory/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetCategory. Param Type Description intParentID Integer The ID of the parent category this category is directly attached to. strName String A display name for the category. intSysCode Integer System codes are used to define root categories with a significant meaning for the CMMS. There should be only one category with each system code for a given tenant. Possible values are : 0 for Assets, 1 for Locations And Facilities, 2 for Equipment, 3 for Tools, 4 for Parts And Supplies, 5 for Inventory Storage, 6 for Buildings, 7 for Plants, 10 for Regions and 11 for Rotating Spares. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. Success Response Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Delete AssetCategory Delete a AssetCategory by Id URL : /api/assetcategory/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetcategory. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"AssetCategory"},{"location":"AssetCategory/index.html#create-assetcategory","text":"This object is used for representing a category of assets. Main categories are equipment, tools and facilities but more categories can be created under those root categories. Create an AssetCategory if AssetCategory does not already exist. URL : /api/assetcategory Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description intParentID Integer The ID of the parent category this category is directly attached to. strName String A display name for the category. intSysCode Integer System codes are used to define root categories with a significant meaning for the CMMS. There should be only one category with each system code for a given tenant. Possible values are : 0 for Assets, 1 for Locations And Facilities, 2 for Equipment, 3 for Tools, 4 for Parts And Supplies, 5 for Inventory Storage, 6 for Buildings, 7 for Plants, 10 for Regions and 11 for Rotating Spares. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 4rt8a89c24753232419483c } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : strName is required } { msg : Create failed }","title":"Create AssetCategory"},{"location":"AssetCategory/index.html#get-all-assetcategory-list","text":"Get the all registered AssetCategory list. URL : /api/assetcategory Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { _id : 5f6a6f90d9741d152c754178 , intParentID : 11, strName : String , intSysCode : 3, bolOverrideRules :true __v : 0 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Get all AssetCategory list"},{"location":"AssetCategory/index.html#get-single-assetcategory-by-id","text":"Get a single AssetCategory by id if current AssetCategory was registered on it. URL : /api/assetcategory/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetcategory. Success Response Code : 200 success Resonse example { msg : Found! , data : { _id : 5f6896897b9884253cf6bdb6 , intParentID : Integer , strName : String , intSysCode :3, bolOverrideRules :true } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If AssetCategory does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Get Single AssetCategory By Id"},{"location":"AssetCategory/index.html#update-assetcategory","text":"Update the AssetCategory by Id URL : /api/assetcategory/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetCategory. Param Type Description intParentID Integer The ID of the parent category this category is directly attached to. strName String A display name for the category. intSysCode Integer System codes are used to define root categories with a significant meaning for the CMMS. There should be only one category with each system code for a given tenant. Possible values are : 0 for Assets, 1 for Locations And Facilities, 2 for Equipment, 3 for Tools, 4 for Parts And Supplies, 5 for Inventory Storage, 6 for Buildings, 7 for Plants, 10 for Regions and 11 for Rotating Spares. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. bolOverrideRules Boolean If set to true, indicates that the associated asset category overrides the rules set. Success Response Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update AssetCategory"},{"location":"AssetCategory/index.html#delete-assetcategory","text":"Delete a AssetCategory by Id URL : /api/assetcategory/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetcategory. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete AssetCategory"},{"location":"AssetEvent/index.html","text":"Create AssetEvent This object represents an event that has occurred on an asset. The type of events that can occur are stored in the AssetEventType object and are defined by each tenant. Create an AssetEvent if AssetEvent does not already exist. URL : /api/assetevent Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Required Type Description dtmDateSubmitted Yes timestamp The date and time when the event was submitted (UNIX epoch milliseconds). intAssetEventTypeID Yes Integer An integer that represents the id of an AssetEventType. intAssetID Yes Integer An integer that represents the id of an Asset. intSubmittedByUserID Integer An integer that represents the id of a User who submitted the event. intWorkOrderID Integer An integer that represents the id of a WorkOrder, if this event originated from a Work Order. This can be null. strAdditionalDescription String A string that represents description of the event. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 5 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : dtmDateSubmitted is required } { msg : Create failed } Get all AssetEvent list Get the all registered AssetEvent list by AssetId. URL : /api/assetevent/:assetId Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { _id : 5 , dtmDateSubmitted : 2020-10-30T20:26:49.518+00:00, intAssetEventTypeID : 4, intAssetID : 3, intSubmittedByUserID :5, intWorkOrderID :6, strAdditionalDescription : String __v : 0 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Update AssetEvent Update the AssetEvent by Id URL : /api/assetevent/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEvent. Param Required Type Description dtmDateSubmitted Yes timestamp The date and time when the event was submitted (UNIX epoch milliseconds). intAssetEventTypeID Yes Integer An integer that represents the id of an AssetEventType. intAssetID Yes Integer An integer that represents the id of an Asset. intSubmittedByUserID Integer An integer that represents the id of a User who submitted the event. intWorkOrderID Integer An integer that represents the id of a WorkOrder, if this event originated from a Work Order. This can be null. strAdditionalDescription String A string that represents description of the event. Success Response Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Delete AssetEvent Delete a AssetEvent by Id URL : /api/assetevent/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetevent. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"AssetEvent"},{"location":"AssetEvent/index.html#create-assetevent","text":"This object represents an event that has occurred on an asset. The type of events that can occur are stored in the AssetEventType object and are defined by each tenant. Create an AssetEvent if AssetEvent does not already exist. URL : /api/assetevent Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Required Type Description dtmDateSubmitted Yes timestamp The date and time when the event was submitted (UNIX epoch milliseconds). intAssetEventTypeID Yes Integer An integer that represents the id of an AssetEventType. intAssetID Yes Integer An integer that represents the id of an Asset. intSubmittedByUserID Integer An integer that represents the id of a User who submitted the event. intWorkOrderID Integer An integer that represents the id of a WorkOrder, if this event originated from a Work Order. This can be null. strAdditionalDescription String A string that represents description of the event. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 5 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : dtmDateSubmitted is required } { msg : Create failed }","title":"Create AssetEvent"},{"location":"AssetEvent/index.html#get-all-assetevent-list","text":"Get the all registered AssetEvent list by AssetId. URL : /api/assetevent/:assetId Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the asset. Success Response: Code : 200 success Resonse example { msg : Found! , data : [ { _id : 5 , dtmDateSubmitted : 2020-10-30T20:26:49.518+00:00, intAssetEventTypeID : 4, intAssetID : 3, intSubmittedByUserID :5, intWorkOrderID :6, strAdditionalDescription : String __v : 0 }, ... ] } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Get all AssetEvent list"},{"location":"AssetEvent/index.html#update-assetevent","text":"Update the AssetEvent by Id URL : /api/assetevent/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEvent. Param Required Type Description dtmDateSubmitted Yes timestamp The date and time when the event was submitted (UNIX epoch milliseconds). intAssetEventTypeID Yes Integer An integer that represents the id of an AssetEventType. intAssetID Yes Integer An integer that represents the id of an Asset. intSubmittedByUserID Integer An integer that represents the id of a User who submitted the event. intWorkOrderID Integer An integer that represents the id of a WorkOrder, if this event originated from a Work Order. This can be null. strAdditionalDescription String A string that represents description of the event. Success Response Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update AssetEvent"},{"location":"AssetEvent/index.html#delete-assetevent","text":"Delete a AssetEvent by Id URL : /api/assetevent/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the assetevent. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete AssetEvent"},{"location":"AssetEventType/index.html","text":"Create AssetEventType This object is used to represent the different types of events that can occur to an asset. The event types are defined by each tenant. Create an AssetEventType if AssetEventType does not already exist. URL : /api/asseteventtype Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strEventCode String A string that represents an event code. strEventDescription String A string that represents an event description. strEventName String A string that represents an event name. Success Response Code : 200 success Resonse example { msg : Created successfully! , data : {id: 57 } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed } Get all AssetEventType list Get the all registered AssetEventType list. URL : /api/asseteventtype Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example: { msg : Found! , data : [ { id : 47, strEventCode : AssetEventType_Code_Name , strEventDescription : AssetEventType_Desc_Name __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error } Get Single AssetEventType By Id Get a single AssetEventType by id if current AssetEventType was registered on it. URL : /api/asseteventtype/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEventType. Success Response Code : 200 success Resonse example { msg : Workorder found! , data : { id : 47, strEventCode : AssetEventType_Code_Name , strEventDescription : AssetEventType_Desc_Name } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If AssetEventType does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null } Update AssetEventType Update the AssetEventType by Id URL : /api/asseteventtype/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the workorder. Param Type Description strEventCode String A string that represents an event code. strEventDescription String A string that represents an event description. strEventName String A string that represents an event name. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Delete AssetEventType Delete a AssetEventType by Id URL : /api/asseteventtype/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEventType. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"AssetEventType"},{"location":"AssetEventType/index.html#create-asseteventtype","text":"This object is used to represent the different types of events that can occur to an asset. The event types are defined by each tenant. Create an AssetEventType if AssetEventType does not already exist. URL : /api/asseteventtype Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strEventCode String A string that represents an event code. strEventDescription String A string that represents an event description. strEventName String A string that represents an event name. Success Response Code : 200 success Resonse example { msg : Created successfully! , data : {id: 57 } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed }","title":"Create AssetEventType"},{"location":"AssetEventType/index.html#get-all-asseteventtype-list","text":"Get the all registered AssetEventType list. URL : /api/asseteventtype Method : GET Auth required : YES Header : Authorization:{jwt-token} Success Response: Code : 200 success Resonse example: { msg : Found! , data : [ { id : 47, strEventCode : AssetEventType_Code_Name , strEventDescription : AssetEventType_Desc_Name __v : 0 }, ... ] } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : Internal Server Error. Code : 500 Resonse example { msg : Internal Server error }","title":"Get all AssetEventType list"},{"location":"AssetEventType/index.html#get-single-asseteventtype-by-id","text":"Get a single AssetEventType by id if current AssetEventType was registered on it. URL : /api/asseteventtype/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEventType. Success Response Code : 200 success Resonse example { msg : Workorder found! , data : { id : 47, strEventCode : AssetEventType_Code_Name , strEventDescription : AssetEventType_Desc_Name } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If AssetEventType does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Get Single AssetEventType By Id"},{"location":"AssetEventType/index.html#update-asseteventtype","text":"Update the AssetEventType by Id URL : /api/asseteventtype/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the workorder. Param Type Description strEventCode String A string that represents an event code. strEventDescription String A string that represents an event description. strEventName String A string that represents an event name. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update AssetEventType"},{"location":"AssetEventType/index.html#delete-asseteventtype","text":"Delete a AssetEventType by Id URL : /api/asseteventtype/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the AssetEventType. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete AssetEventType"},{"location":"Business/index.html","text":"Create Business A Business represents a particular Business within your CMMS. It contains information about the address of the Business, and the Business Classification, such as Agriculture, Aerospace/Airline, Automotive, Biotechnology, Chemical Processing, Computer, Data Centers, Defense, Education, Electronics, Energy and Utilities, Manufacturing, Software, Technology, and Telecommunications. Create an Business if Business does not already exist. URL : /api/business Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 6 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed } Get Single Business By Id Get a single Business by id if current Business was registered on it. URL : /api/business/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response: Code : 200 success Resonse example { msg : Found! , data : { _id : 6 , strProvince : String , strPostalCode : String , strTimezone : String , strPrimaryEmail : String , strName : String , strPhone : String , strFax : String , intCountryID : Integer , strAddress : String , strPrimaryContact : String , strNotes : String , strPhone2 : String , strCode : String , strCity : String , strSecondaryEmail : String } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If Business does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null } Update Business Update the Business by Id URL : /api/business/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the Business. Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed } Delete Business Delete a Business by Id URL : /api/business/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Business"},{"location":"Business/index.html#create-business","text":"A Business represents a particular Business within your CMMS. It contains information about the address of the Business, and the Business Classification, such as Agriculture, Aerospace/Airline, Automotive, Biotechnology, Chemical Processing, Computer, Data Centers, Defense, Education, Electronics, Energy and Utilities, Manufacturing, Software, Technology, and Telecommunications. Create an Business if Business does not already exist. URL : /api/business Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response: Code : 200 success Resonse example { msg : Created successfully! , data : {id: 6 } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed }","title":"Create Business"},{"location":"Business/index.html#get-single-business-by-id","text":"Get a single Business by id if current Business was registered on it. URL : /api/business/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response: Code : 200 success Resonse example { msg : Found! , data : { _id : 6 , strProvince : String , strPostalCode : String , strTimezone : String , strPrimaryEmail : String , strName : String , strPhone : String , strFax : String , intCountryID : Integer , strAddress : String , strPrimaryContact : String , strNotes : String , strPhone2 : String , strCode : String , strCity : String , strSecondaryEmail : String } } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If Business does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Get Single Business By Id"},{"location":"Business/index.html#update-business","text":"Update the Business by Id URL : /api/business/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the Business. Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response: Code : 200 success Resonse example { msg : Updated successfully! } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update Business"},{"location":"Business/index.html#delete-business","text":"Delete a Business by Id URL : /api/business/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response: Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses: Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete Business"},{"location":"Business/creat_Business_Api.html","text":"Create Business A Business represents a particular Business within your CMMS. It contains information about the address of the Business, and the Business Classification, such as Agriculture, Aerospace/Airline, Automotive, Biotechnology, Chemical Processing, Computer, Data Centers, Defense, Education, Electronics, Energy and Utilities, Manufacturing, Software, Technology, and Telecommunications. Create an AssetCategory if AssetCategory does not already exist. URL : /api/business Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response Code : 200 success Resonse example { msg : Created successfully! , data : {id: 6 } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed }","title":"Create Business"},{"location":"Business/creat_Business_Api.html#create-business","text":"A Business represents a particular Business within your CMMS. It contains information about the address of the Business, and the Business Classification, such as Agriculture, Aerospace/Airline, Automotive, Biotechnology, Chemical Processing, Computer, Data Centers, Defense, Education, Electronics, Energy and Utilities, Manufacturing, Software, Technology, and Telecommunications. Create an AssetCategory if AssetCategory does not already exist. URL : /api/business Method : POST Auth required : YES Header : Authorization:{jwt-token} Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business.","title":"Create Business"},{"location":"Business/creat_Business_Api.html#success-response","text":"Code : 200 success Resonse example { msg : Created successfully! , data : {id: 6 } }","title":"Success Response"},{"location":"Business/creat_Business_Api.html#error-responses","text":"Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Create failed }","title":"Error Responses"},{"location":"Business/delete_Business_Api.html","text":"Delete Business Api Delete a Business by Id URL : /api/business/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response Code : 200 success Resonse example { msg : Deleted successfully! , data: null } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Delete Business Api"},{"location":"Business/delete_Business_Api.html#delete-business-api","text":"Delete a Business by Id URL : /api/business/:Id Method : DELETE Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business.","title":"Delete Business Api"},{"location":"Business/delete_Business_Api.html#success-response","text":"Code : 200 success Resonse example { msg : Deleted successfully! , data: null }","title":"Success Response"},{"location":"Business/delete_Business_Api.html#error-responses","text":"Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If there was no asset available to delete. Code : 400 BAD REQUEST Content example { msg : Delete failed , data :null }","title":"Error Responses"},{"location":"Business/get_Business_byId_Api.html","text":"Get Single Business By Id Api Get a single Business by id if current Business was registered on it. URL : /api/business/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business. Success Response Code : 200 success Resonse example { msg : Found! , data : { _id : 6 , strProvince : String , strPostalCode : String , strTimezone : String , strPrimaryEmail : String , strName : String , strPhone : String , strFax : String , intCountryID : Integer , strAddress : String , strPrimaryContact : String , strNotes : String , strPhone2 : String , strCode : String , strCity : String , strSecondaryEmail : String } } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Or Condition : If Business does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Get Single Business By Id Api"},{"location":"Business/get_Business_byId_Api.html#get-single-business-by-id-api","text":"Get a single Business by id if current Business was registered on it. URL : /api/business/:Id Method : GET Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the business.","title":"Get Single Business By Id Api"},{"location":"Business/get_Business_byId_Api.html#success-response","text":"Code : 200 success Resonse example { msg : Found! , data : { _id : 6 , strProvince : String , strPostalCode : String , strTimezone : String , strPrimaryEmail : String , strName : String , strPhone : String , strFax : String , intCountryID : Integer , strAddress : String , strPrimaryContact : String , strNotes : String , strPhone2 : String , strCode : String , strCity : String , strSecondaryEmail : String } }","title":"Success Response"},{"location":"Business/get_Business_byId_Api.html#error-responses","text":"Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null }","title":"Error Responses"},{"location":"Business/get_Business_byId_Api.html#or","text":"Condition : If Business does not exist on server. Code : 404 Not Found Content example { msg : Not found , data :null }","title":"Or"},{"location":"Business/update_Business_Api.html","text":"Update Business Api Update the Business by Id URL : /api/business/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the Business. Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business. Success Response Code : 200 success Resonse example { msg : Updated successfully! } Error Responses Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Update Business Api"},{"location":"Business/update_Business_Api.html#update-business-api","text":"Update the Business by Id URL : /api/business/:Id Method : PUT Auth required : YES Header : Authorization:{jwt-token} URL Parameters : An integer that uniquely identifies the Business. Param Type Description strProvince String A string that identifies the Province of the Business. strPostalCode String A string that identifies the Postal Code of the Business. strTimezone String A string that identifies the Time Zone of the Business. strPrimaryEmail String A string that identifies the Primary Email of the Business. strName String A string that identifies the Name of the Business. strPhone String A string that identifies the Phone Number of the Business. strFax String A string that identifies the Fax Number of the Business. intCountryID Integer An integer that uniquely identifies the Country of the Business (used in conjunction with the Country object). strAddress String A string that identifies the Address of the Business. strPrimaryContact String A string that identifies the Primary Contact of the Business. strNotes String A string that identifies Notes of the Business. strPhone2 String An additional optional phone number of the Business. strCode String The code of the Business. strCity String The city of the Business. strSecondaryEmail String A string that identifies secondary email of the Business.","title":"Update Business Api"},{"location":"Business/update_Business_Api.html#success-response","text":"Code : 200 success Resonse example { msg : Updated successfully! }","title":"Success Response"},{"location":"Business/update_Business_Api.html#error-responses","text":"Code : 401 Unauthorized Condition : Missing or incorrect authentication credentials and expired one. Resonse example { msg : JWT token varified failed! , data :null } { msg : JWT token expired! , data :null } Condition : If fields are missed or put the wrong type of value. Code : 400 BAD REQUEST Content example { msg : Update failed }","title":"Error Responses"}]}